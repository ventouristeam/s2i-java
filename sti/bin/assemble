#!/bin/bash
. $(dirname $0)/functions

PROJECT_NAME=$(cat /tmp/src/settings.gradle | sed -n "s/.*rootProject\.name = '\(.*\)'/\1/p")
APP_JAR_NAME=${APP_JAR_NAME:-${PROJECT_NAME}}
HOME=/opt/app-root/src
LOCAL_SOURCE_DIR=${HOME}/${PROJECT_NAME}
mkdir -p ${LOCAL_SOURCE_DIR}

# Resulting artifact files will be deployed to /opt/openshift
DEPLOY_DIR=/opt/openshift

if compgen -G "/tmp/src/*" >/dev/null; then
  cp -ad /tmp/src/* $LOCAL_SOURCE_DIR
fi

if [ -f "$LOCAL_SOURCE_DIR/build.gradle" ]; then
  # the subdirectory within LOCAL_SOURCE_DIR from where we should copy build
  # artifacts (*.war, *.jar)
  ARTIFACT_DIR=${ARTIFACT_DIR:-build/libs}

  echo "Building with gradle. $LOCAL_SOURCE_DIR/build.gradle found."

  # Use Gradle wrapper if available
  if [ -f "$LOCAL_SOURCE_DIR/gradlew" ]; then
    GRADLE_CMD="sh gradlew"
  else
    GRADLE_CMD="gradle"
  fi
      
  pushd $LOCAL_SOURCE_DIR &> /dev/null

  if [ -z "$BUILDER_ARGS" ]; then
    export BUILDER_ARGS="build -x test"
    # TODO: Specify setting file with -c sss
  fi

  echo "Found gradle.build ... attempting to build with '$GRADLE_CMD --full-stacktrace ${BUILDER_ARGS}'"

  echo "Gradle version:"
  $GRADLE_CMD --version

  # Execute the actual build
  $GRADLE_CMD --full-stacktrace $BUILDER_ARGS

  ERR=$?
  if [ $ERR -ne 0 ]; then
    echo "Aborting due to error code $ERR from Gradle build"
    exit $ERR
  fi

  # Copy built artifacts (if any!) from the target/ directory
  # (or $ARTIFACT_DIR if specified)
  # to the $DEPLOY_DIR directory for later deployment
  copy_artifacts "$ARTIFACT_DIR" jar


  # clean up after build
  $GRADLE_CMD clean

  popd &> /dev/null
fi

# Rename artifact if necessary
if [ ! -f ${DEPLOY_DIR}/app.jar ]; then
  if [ $(ls ${DEPLOY_DIR}/${APP_JAR_NAME}.jar | wc -l) -eq 1 ]; then
    echo "[INFO] Copying ${DEPLOY_DIR}/${APP_JAR_NAME}.jar into ${DEPLOY_DIR}/app.jar"
    cp ${DEPLOY_DIR}/${APP_JAR_NAME}.jar ${DEPLOY_DIR}/app.jar
    [ ! -f ${DEPLOY_DIR}/app.jar ] && echo "Application could not be properly built." && exit 1
    echo "[INFO] Application jar file is located in ${DEPLOY_DIR}/app.jar"
  else
    echo "[ERROR] No app.jar file located in ${DEPLOY_DIR}"
    exit 1
  fi
fi

exit 0
